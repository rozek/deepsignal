{"version":3,"file":"deepsignal-core.min.js","sources":["../src/index.ts"],"sourcesContent":["import { batch, computed, signal, Signal } from \"@preact/signals-core\";\n\nconst proxyToSignals = new WeakMap();\nconst objToProxy = new WeakMap();\nconst arrayToArrayOfSignals = new WeakMap();\nconst proxies = new WeakSet();\nconst objToIterable = new WeakMap();\nconst rg = /^\\$/;\nlet peeking = false;\n\nexport const deepSignal = <T extends object>(obj: T): DeepSignal<T> => {\n\tif (!shouldProxy(obj)) throw new Error(\"This object can't be observed.\");\n\tif (!objToProxy.has(obj))\n\t\tobjToProxy.set(obj, createProxy(obj, objectHandlers) as DeepSignal<T>);\n\treturn objToProxy.get(obj);\n};\n\nexport const peek = <\n\tT extends DeepSignalObject<object>,\n\tK extends keyof RevertDeepSignalObject<T>\n>(\n\tobj: T,\n\tkey: K\n): RevertDeepSignal<RevertDeepSignalObject<T>[K]> => {\n\tpeeking = true;\n\tconst value = obj[key];\n\ttry {\n\t\tpeeking = false;\n\t} catch (e) {}\n\treturn value as RevertDeepSignal<RevertDeepSignalObject<T>[K]>;\n};\n\nconst createProxy = (target: object, handlers: ProxyHandler<object>) => {\n\tconst proxy = new Proxy(target, handlers);\n\tproxies.add(proxy);\n\treturn proxy;\n};\n\nconst throwOnMutation = () => {\n\tthrow new Error(\"Don't mutate the signals directly.\");\n};\n\nconst get = (isArrayOfSignals: boolean) =>\n\t(target: object, fullKey: string, receiver: object): unknown => {\n\t\tif (peeking) return Reflect.get(target, fullKey, receiver);\n\t\tlet returnSignal = isArrayOfSignals || (fullKey[0] === \"$\") && (fullKey !== '$');\n\t\tif (!isArrayOfSignals && returnSignal && Array.isArray(target)) {\n\t\t\tif (fullKey === \"$\") {\n\t\t\t\tif (!arrayToArrayOfSignals.has(target))\n\t\t\t\t\tarrayToArrayOfSignals.set(target, createProxy(target, arrayHandlers));\n\t\t\t\treturn arrayToArrayOfSignals.get(target);\n\t\t\t}\n\t\t\treturnSignal = fullKey === \"$length\";\n\t\t}\n\n\t\tif (!proxyToSignals.has(receiver)) proxyToSignals.set(receiver, new Map());\n\n\t\tconst signals = proxyToSignals.get(receiver);\n\t\tconst key = returnSignal ? fullKey.replace(rg, \"\") : fullKey;\n\t\tif (\n\t\t\t!signals.has(key) &&\n\t\t\ttypeof Object.getOwnPropertyDescriptor(target, key)?.get === \"function\"\n\t\t) {\n\t\t\tsignals.set(\n\t\t\t\tkey,\n\t\t\t\tcomputed(() => Reflect.get(target, key, receiver))\n\t\t\t);\n\t\t} else {\n\t\t\tlet value = Reflect.get(target, key, receiver);\n\t\t\tif (returnSignal && typeof value === \"function\") return;\n\n\t\t\tif (typeof key === \"symbol\" && wellKnownSymbols.has(key)) return value;\n\t\t\t// TODO: doesn't \"typeof key\" always yield \"string\"?\n\n\t\t\tif (!signals.has(key)) {\n\t\t\t\tif (shouldProxy(value)) {\n\t\t\t\t\tif (!objToProxy.has(value))\n\t\t\t\t\t\tobjToProxy.set(value, createProxy(value, objectHandlers));\n\t\t\t\t\tvalue = objToProxy.get(value);\n\t\t\t\t}\n\t\t\t\tsignals.set(key, signal(value));\n\t\t\t}\n\t\t}\n\t\treturn returnSignal ? signals.get(key) : signals.get(key).value;\n\t};\n\nconst objectHandlers = {\n\tget: get(false),\n\n\tset(target: object, fullKey: string, val: any, receiver: object): boolean {\n\t\tif (!proxyToSignals.has(receiver)) proxyToSignals.set(receiver, new Map());\n\t\tconst signals = proxyToSignals.get(receiver);\n\t\tif ((fullKey[0] === \"$\") && (fullKey !== '$')) {\n\t\t\tif (!(val instanceof Signal)) throwOnMutation();\n\t\t\tconst key = fullKey.replace(rg, \"\");\n\t\t\tsignals.set(key, val);\n\t\t\treturn Reflect.set(target, key, val.peek(), receiver);\n\t\t} else {\n\t\t\tlet internal = val;\n\t\t\tif (shouldProxy(val)) {\n\t\t\t\tif (!objToProxy.has(val))\n\t\t\t\t\tobjToProxy.set(val, createProxy(val, objectHandlers));\n\t\t\t\tinternal = objToProxy.get(val);\n\t\t\t}\n\t\t\tconst result = Reflect.set(target, fullKey, val, receiver);\n\t\t\tif (!signals.has(fullKey)) signals.set(fullKey, signal(internal));\n\t\t\telse signals.get(fullKey).value = internal;\n\t\t\tif (Array.isArray(target) && signals.has(\"length\"))\n\t\t\t\tsignals.get(\"length\").value = target.length;\n\t\t\treturn result;\n\t\t}\n\t},\n\n\tdefineProperty (target:object, key:string, descriptor:object):boolean {\n\t\tif ((key[0] === \"$\") && (key !== '$')) throwOnMutation();\n\n\t\tconst isNew = ! (key in target)\n\n\t  const signals = proxyToSignals.get(objToProxy.get(target))\n\t\tconst Result:boolean = Reflect.defineProperty(target,key,descriptor)\n\t\t\tif ('value' in descriptor) {\n\t\t\t\tif (signals && signals.has(key)) signals.get(key).value = descriptor.value\n\t\t\t}\n\n\t\t\tif (isNew && objToIterable.has(target)) {\n\t\t\t\tobjToIterable.get(target).value++\n\t\t\t}\n\t\treturn Result\n\t},\n\n\tdeleteProperty(target: object, key: string): boolean {\n\t\tif ((key[0] === \"$\") && (key !== '$')) throwOnMutation();\n\t\tconst signals = proxyToSignals.get(objToProxy.get(target));\n\t\tconst result = Reflect.deleteProperty(target, key);\n\t\tif (signals && signals.has(key)) signals.get(key).value = undefined;\n\t\tobjToIterable.has(target) && objToIterable.get(target).value++;\n\t\treturn result;\n\t},\n\n\townKeys(target: object): (string | symbol)[] {\n\t\tif (!objToIterable.has(target)) objToIterable.set(target, signal(0));\n\t\t(objToIterable as any)._ = objToIterable.get(target).value;\n\t\treturn Reflect.ownKeys(target);\n\t},\n};\n\nconst arrayHandlers = {\n\tget: get(true),\n\tset: throwOnMutation,\n\tdeleteProperty: throwOnMutation,\n};\n\nconst wellKnownSymbols = new Set(\n\tObject.getOwnPropertyNames(Symbol)\n\t\t.map(key => Symbol[key as WellKnownSymbols])\n\t\t.filter(value => typeof value === \"symbol\")\n);\nconst supported = new Set([Object, Array]);\nconst shouldProxy = (val: any): boolean => {\n\tif (typeof val !== \"object\" || val === null) return false;\n\tconst isBuiltIn =\n\t\ttypeof val.constructor === \"function\" &&\n\t\tval.constructor.name in globalThis &&\n\t\t(globalThis as any)[val.constructor.name] === val.constructor;\n\treturn (!isBuiltIn || supported.has(val.constructor)) && !proxies.has(val);\n};\n\n/**** additional support for some Array methods ****/\n\n\texport function ValueIsDeeplyObserved (Value:any):boolean {\n\t  return proxies.has(Value)\n\t}\n\n/**** SignalSavvy ****/\n\n  function SignalSavvy (ArrayMethod:Function):Function {\n  \treturn function (this:any[], ...Arguments:any[]):any {\n\t    if (ValueIsDeeplyObserved(this)) {\n\t      let Result\n\t        batch(() => { Result = ArrayMethod.call(this,...Arguments) })\n\t      return Result\n\t    } else {\n\t      return ArrayMethod.call(this,...Arguments)\n\t    }\n  \t}\n  }\n  \n  ;[                                     // 'push' works properly out-of-the-box\n    'copyWithin','fill','pop','reverse','shift','sort','splice','unshift'\n  ].forEach((MethodName:string) => {\n// @ts-ignore TS7015 just assume proper typing for built-in array methods\n  \tArray.prototype[MethodName] = SignalSavvy(Array.prototype[MethodName])\n  })\n\n/** TYPES **/\n\nexport type DeepSignal<T> = T extends Function\n\t? T\n\t: T extends Array<unknown>\n\t? DeepSignalArray<T>\n\t: T extends object\n\t? DeepSignalObject<T>\n\t: T;\n\ntype DeepSignalObject<T extends object> = {\n\t[P in keyof T & string as `$${P}`]?: T[P] extends Function\n\t\t? never\n\t\t: Signal<T[P]>;\n} & {\n\t[P in keyof T]: DeepSignal<T[P]>;\n};\n\n/** @ts-expect-error **/\ninterface DeepArray<T> extends Array<T> {\n\tmap: <U>(\n\t\tcallbackfn: (\n\t\t\tvalue: DeepSignal<T>,\n\t\t\tindex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => U,\n\t\tthisArg?: any\n\t) => U[];\n\tforEach: (\n\t\tcallbackfn: (\n\t\t\tvalue: DeepSignal<T>,\n\t\t\tindex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => void,\n\t\tthisArg?: any\n\t) => void;\n\tconcat(...items: ConcatArray<T>[]): DeepSignalArray<T[]>;\n\tconcat(...items: (T | ConcatArray<T>)[]): DeepSignalArray<T[]>;\n\treverse(): DeepSignalArray<T[]>;\n\tshift(): DeepSignal<T> | undefined;\n\tslice(start?: number, end?: number): DeepSignalArray<T[]>;\n\tsplice(start: number, deleteCount?: number): DeepSignalArray<T[]>;\n\tsplice(\n\t\tstart: number,\n\t\tdeleteCount: number,\n\t\t...items: T[]\n\t): DeepSignalArray<T[]>;\n\tfilter<S extends T>(\n\t\tpredicate: (\n\t\t\tvalue: DeepSignal<T>,\n\t\t\tindex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => value is DeepSignal<S>,\n\t\tthisArg?: any\n\t): DeepSignalArray<S[]>;\n\tfilter(\n\t\tpredicate: (\n\t\t\tvalue: DeepSignal<T>,\n\t\t\tindex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => unknown,\n\t\tthisArg?: any\n\t): DeepSignalArray<T[]>;\n\treduce(\n\t\tcallbackfn: (\n\t\t\tpreviousValue: DeepSignal<T>,\n\t\t\tcurrentValue: DeepSignal<T>,\n\t\t\tcurrentIndex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => T\n\t): DeepSignal<T>;\n\treduce(\n\t\tcallbackfn: (\n\t\t\tpreviousValue: DeepSignal<T>,\n\t\t\tcurrentValue: DeepSignal<T>,\n\t\t\tcurrentIndex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => DeepSignal<T>,\n\t\tinitialValue: T\n\t): DeepSignal<T>;\n\treduce<U>(\n\t\tcallbackfn: (\n\t\t\tpreviousValue: U,\n\t\t\tcurrentValue: DeepSignal<T>,\n\t\t\tcurrentIndex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => U,\n\t\tinitialValue: U\n\t): U;\n\treduceRight(\n\t\tcallbackfn: (\n\t\t\tpreviousValue: DeepSignal<T>,\n\t\t\tcurrentValue: DeepSignal<T>,\n\t\t\tcurrentIndex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => T\n\t): DeepSignal<T>;\n\treduceRight(\n\t\tcallbackfn: (\n\t\t\tpreviousValue: DeepSignal<T>,\n\t\t\tcurrentValue: DeepSignal<T>,\n\t\t\tcurrentIndex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => DeepSignal<T>,\n\t\tinitialValue: T\n\t): DeepSignal<T>;\n\treduceRight<U>(\n\t\tcallbackfn: (\n\t\t\tpreviousValue: U,\n\t\t\tcurrentValue: DeepSignal<T>,\n\t\t\tcurrentIndex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => U,\n\t\tinitialValue: U\n\t): U;\n}\ntype ArrayType<T> = T extends Array<infer I> ? I : T;\ntype DeepSignalArray<T> = DeepArray<ArrayType<T>> & {\n\t[key: number]: DeepSignal<ArrayType<T>>;\n\t$?: { [key: number]: Signal<ArrayType<T>> };\n\t$length?: Signal<number>;\n};\n\nexport declare const useDeepSignal: <T extends object>(obj: T) => DeepSignal<T>;\n\ntype FilterSignals<K> = K extends `$${infer P}` ? never : K;\ntype RevertDeepSignalObject<T> = Pick<T, FilterSignals<keyof T>>;\ntype RevertDeepSignalArray<T> = Omit<T, \"$\" | \"$length\">;\n\nexport type RevertDeepSignal<T> = T extends Array<unknown>\n\t? RevertDeepSignalArray<T>\n\t: T extends object\n\t? RevertDeepSignalObject<T>\n\t: T;\n\ntype WellKnownSymbols =\n\t| \"asyncIterator\"\n\t| \"hasInstance\"\n\t| \"isConcatSpreadable\"\n\t| \"iterator\"\n\t| \"match\"\n\t| \"matchAll\"\n\t| \"replace\"\n\t| \"search\"\n\t| \"species\"\n\t| \"split\"\n\t| \"toPrimitive\"\n\t| \"toStringTag\"\n\t| \"unscopables\";\n"],"names":["proxyToSignals","WeakMap","objToProxy","arrayToArrayOfSignals","proxies","WeakSet","objToIterable","rg","peeking","createProxy","target","handlers","proxy","Proxy","add","throwOnMutation","Error","get","isArrayOfSignals","fullKey","receiver","_Object$getOwnPropert","Reflect","returnSignal","Array","isArray","has","set","arrayHandlers","Map","signals","key","replace","Object","getOwnPropertyDescriptor","value","wellKnownSymbols","shouldProxy","objectHandlers","signal","computed","val","Signal","peek","internal","result","length","defineProperty","descriptor","isNew","Result","deleteProperty","undefined","ownKeys","_","Set","getOwnPropertyNames","Symbol","map","filter","supported","constructor","name","globalThis","ValueIsDeeplyObserved","Value","forEach","MethodName","ArrayMethod","prototype","_this","this","Arguments","slice","call","arguments","batch","apply","concat","obj","e"],"mappings":"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"}