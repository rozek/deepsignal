import{Signal as e,signal as t,computed as r}from"@preact/signals-core";const s=new WeakMap,n=new WeakMap,o=new WeakMap,a=new WeakSet,l=new WeakMap,c=/^\$/;let g=!1;const f=e=>{if(!v(e))throw new Error("This object can't be observed.");return n.has(e)||n.set(e,i(e,y)),n.get(e)},h=(e,t)=>(g=!0,g=!1,e[t]),i=(e,t)=>{const r=new Proxy(e,t);return a.add(r),r},u=()=>{throw new Error("Don't mutate the signals directly.")},p=e=>(a,l,f)=>{var h;if(g)return Reflect.get(a,l,f);let u=e||"$"===l[0];if(!e&&u&&Array.isArray(a)){if("$"===l)return o.has(a)||o.set(a,i(a,w)),o.get(a);u="$length"===l}s.has(f)||s.set(f,new Map);const p=s.get(f),m=u?l.replace(c,""):l;if(p.has(m)||"function"!=typeof(null==(h=Object.getOwnPropertyDescriptor(a,m))?void 0:h.get)){let e=Reflect.get(a,m,f);if(u&&"function"==typeof e)return;if("symbol"==typeof m&&b.has(m))return e;p.has(m)||(v(e)&&(n.has(e)||n.set(e,i(e,y)),e=n.get(e)),p.set(m,t(e)))}else p.set(m,r(()=>Reflect.get(a,m,f)));return u?p.get(m):p.get(m).value},y={get:p(!1),set(r,o,a,g){s.has(g)||s.set(g,new Map);const f=s.get(g);if("$"===o[0]){a instanceof e||u();const t=o.replace(c,"");return f.set(t,a),Reflect.set(r,t,a.peek(),g)}{let e=a;v(a)&&(n.has(a)||n.set(a,i(a,y)),e=n.get(a));const s=!(o in r),c=Reflect.set(r,o,a,g);return f.has(o)?f.get(o).value=e:f.set(o,t(e)),s&&l.has(r)&&l.get(r).value++,Array.isArray(r)&&f.has("length")&&(f.get("length").value=r.length),c}},deleteProperty(e,t){"$"===t[0]&&u();const r=s.get(n.get(e)),o=Reflect.deleteProperty(e,t);return r&&r.has(t)&&(r.get(t).value=void 0),l.has(e)&&l.get(e).value++,o},ownKeys:e=>(l.has(e)||l.set(e,t(0)),l.get(e),Reflect.ownKeys(e))},w={get:p(!0),set:u,deleteProperty:u},b=new Set(Object.getOwnPropertyNames(Symbol).map(e=>Symbol[e]).filter(e=>"symbol"==typeof e)),m=new Set([Object,Array]),v=e=>"object"==typeof e&&null!==e&&(!("function"==typeof e.constructor&&e.constructor.name in globalThis&&globalThis[e.constructor.name]===e.constructor)||m.has(e.constructor))&&!a.has(e);export{f as deepSignal,h as peek};
//# sourceMappingURL=deepsignal-core.mjs.map
