import{Signal as e,signal as t,computed as r}from"@preact/signals-core";var n=new WeakMap,a=new WeakMap,o=new WeakMap,s=new WeakSet,u=new WeakMap,c=/^\$/,l=!1,f=function(e){if(!d(e))throw new Error("This object can't be observed.");return a.has(e)||a.set(e,g(e,v)),a.get(e)},i=function(e,t){return l=!0,l=!1,e[t]},g=function(e,t){var r=new Proxy(e,t);return s.add(r),r},h=function(){throw new Error("Don't mutate the signals directly.")},p=function(e){return function(s,u,f){var i;if(l)return Reflect.get(s,u,f);var h=e||"$"===u[0]&&"$"!==u;if(!e&&h&&Array.isArray(s)){if("$"===u)return o.has(s)||o.set(s,g(s,y)),o.get(s);h="$length"===u}n.has(f)||n.set(f,new Map);var p=n.get(f),b=h?u.replace(c,""):u;if(p.has(b)||"function"!=typeof(null==(i=Object.getOwnPropertyDescriptor(s,b))?void 0:i.get)){var m=Reflect.get(s,b,f);if(h&&"function"==typeof m)return;if("symbol"==typeof b&&w.has(b))return m;p.has(b)||(d(m)&&(a.has(m)||a.set(m,g(m,v)),m=a.get(m)),p.set(b,t(m)))}else p.set(b,r(function(){return Reflect.get(s,b,f)}));return h?p.get(b):p.get(b).value}},v={get:p(!1),set:function(r,o,s,u){n.has(u)||n.set(u,new Map);var l=n.get(u);if("$"===o[0]&&"$"!==o){s instanceof e||h();var f=o.replace(c,"");return l.set(f,s),Reflect.set(r,f,s.peek(),u)}var i=s;d(s)&&(a.has(s)||a.set(s,g(s,v)),i=a.get(s));var p=Reflect.set(r,o,s,u);return l.has(o)?l.get(o).value=i:l.set(o,t(i)),Array.isArray(r)&&l.has("length")&&(l.get("length").value=r.length),p},defineProperty:function(e,t,r){"$"===t[0]&&"$"!==t&&h();var o=!(t in e),s=n.get(a.get(e)),c=Reflect.defineProperty(e,t,r);return"value"in r&&s&&s.has(t)&&(s.get(t).value=r.value),o&&u.has(e)&&u.get(e).value++,c},deleteProperty:function(e,t){"$"===t[0]&&"$"!==t&&h();var r=n.get(a.get(e)),o=Reflect.deleteProperty(e,t);return r&&r.has(t)&&(r.get(t).value=void 0),u.has(e)&&u.get(e).value++,o},ownKeys:function(e){return u.has(e)||u.set(e,t(0)),u.get(e).value=u.get(e).value,Reflect.ownKeys(e)}},y={get:p(!0),set:h,deleteProperty:h},w=new Set(Object.getOwnPropertyNames(Symbol).map(function(e){return Symbol[e]}).filter(function(e){return"symbol"==typeof e})),b=new Set([Object,Array]),d=function(e){return"object"==typeof e&&null!==e&&(!("function"==typeof e.constructor&&e.constructor.name in globalThis&&globalThis[e.constructor.name]===e.constructor)||b.has(e.constructor))&&!s.has(e)};export{f as deepSignal,i as peek};
//# sourceMappingURL=deepsignal-core.module.js.map
