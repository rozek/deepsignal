import"@preact/signals-react";import{useMemo as e}from"react";import{batch as t,Signal as r,signal as n,computed as s}from"@preact/signals-core";const o=new WeakMap,a=new WeakMap,c=new WeakMap,l=new WeakSet,i=new WeakMap,u=/^\$/;let f=!1;const p=e=>{if(!P(e))throw new Error("This object can't be observed.");return a.has(e)||a.set(e,y(e,m)),a.get(e)},g=(e,t)=>{f=!0;const r=e[t];try{f=!1}catch(e){}return r};function h(e,t){const r=t?g(e,t):e;return l.add(r),r}const y=(e,t)=>{const r=new Proxy(e,t);return l.add(r),r},w=()=>{throw new Error("Don't mutate the signals directly.")},v=e=>(t,r,l)=>{var i;if(f)return Reflect.get(t,r,l);let p=e||"$"===r[0]&&"$"!==r;if(!e&&p&&Array.isArray(t)){if("$"===r)return c.has(t)||c.set(t,y(t,b)),c.get(t);p="$length"===r}o.has(l)||o.set(l,new Map);const g=o.get(l),h=p?r.replace(u,""):r;if(g.has(h)||"function"!=typeof(null==(i=Object.getOwnPropertyDescriptor(t,h))?void 0:i.get)){let e=Reflect.get(t,h,l);if(p&&"function"==typeof e)return;if("symbol"==typeof h&&d.has(h))return e;g.has(h)||(P(e)&&(a.has(e)||a.set(e,y(e,m)),e=a.get(e)),g.set(h,n(e))),p||(g.get(h).value=e)}else g.set(h,s(()=>Reflect.get(t,h,l)));return p?g.get(h):g.get(h).value},m={get:v(!1),set(e,t,s,c){o.has(c)||o.set(c,new Map);const l=o.get(c);if("$"===t[0]&&"$"!==t){s instanceof r||w();const n=t.replace(u,"");return l.set(n,s),Reflect.set(e,n,s.peek(),c)}{let r=s;P(s)&&(a.has(s)||a.set(s,y(s,m)),r=a.get(s));const o=Reflect.set(e,t,s,c);return l.has(t)?l.get(t).value=r:l.set(t,n(r)),Array.isArray(e)&&l.has("length")&&(l.get("length").value=e.length),o}},defineProperty(e,t,r){"$"===t[0]&&"$"!==t&&w();const n=!(t in e),s=o.get(a.get(e)),c=Reflect.defineProperty(e,t,r);return"value"in r&&s&&s.has(t)&&(s.get(t).value=r.value),n&&i.has(e)&&i.get(e).value++,c},deleteProperty(e,t){"$"===t[0]&&"$"!==t&&w();const r=o.get(a.get(e)),n=Reflect.deleteProperty(e,t);return r&&r.has(t)&&(r.get(t).value=void 0),i.has(e)&&i.get(e).value++,n},ownKeys:e=>(i.has(e)||i.set(e,n(0)),i._=i.get(e).value,Reflect.ownKeys(e))},b={get:v(!0),set:w,deleteProperty:w},d=new Set(Object.getOwnPropertyNames(Symbol).map(e=>Symbol[e]).filter(e=>"symbol"==typeof e)),$=new Set([Object,Array]),P=e=>"object"==typeof e&&null!==e&&(!("function"==typeof e.constructor&&e.constructor.name in globalThis&&globalThis[e.constructor.name]===e.constructor)||$.has(e.constructor))&&!l.has(e);function R(e){return a.has(e)}["copyWithin","fill","pop","reverse","shift","sort","splice","unshift"].forEach(e=>{var r;Array.prototype[e]=(r=Array.prototype[e],function(...e){if(R(this)){let n;return t(()=>{n=r.call(this,...e)}),n}return r.call(this,...e)})});const A=t=>e(()=>p(t),[]);export{R as ValueIsDeeplyObserved,p as deepSignal,g as peek,h as shallow,A as useDeepSignal};
//# sourceMappingURL=deepsignal-react.mjs.map
