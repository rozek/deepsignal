{"version":3,"file":"deepsignal.min.js","sources":["../core/src/index.ts","../src/index.ts"],"sourcesContent":["import { batch, computed, signal, Signal } from \"@preact/signals-core\";\n\nconst proxyToSignals = new WeakMap();\nconst objToProxy = new WeakMap();\nconst arrayToArrayOfSignals = new WeakMap();\nconst proxies = new WeakSet();\nconst objToIterable = new WeakMap();\nconst rg = /^\\$/;\nlet peeking = false;\n\nexport const deepSignal = <T extends object>(obj: T): DeepSignal<T> => {\n\tif (!shouldProxy(obj)) throw new Error(\"This object can't be observed.\");\n\tif (!objToProxy.has(obj))\n\t\tobjToProxy.set(obj, createProxy(obj, objectHandlers) as DeepSignal<T>);\n\treturn objToProxy.get(obj);\n};\n\nexport const peek = <\n\tT extends DeepSignalObject<object>,\n\tK extends keyof RevertDeepSignalObject<T>\n>(\n\tobj: T,\n\tkey: K\n): RevertDeepSignal<RevertDeepSignalObject<T>[K]> => {\n\tpeeking = true;\n\tconst value = obj[key];\n\ttry {\n\t\tpeeking = false;\n\t} catch (e) {}\n\treturn value as RevertDeepSignal<RevertDeepSignalObject<T>[K]>;\n};\n\nconst createProxy = (target: object, handlers: ProxyHandler<object>) => {\n\tconst proxy = new Proxy(target, handlers);\n\tproxies.add(proxy);\n\treturn proxy;\n};\n\nconst throwOnMutation = () => {\n\tthrow new Error(\"Don't mutate the signals directly.\");\n};\n\nconst get = (isArrayOfSignals: boolean) =>\n\t(target: object, fullKey: string, receiver: object): unknown => {\n\t\tif (peeking) return Reflect.get(target, fullKey, receiver);\n\t\tlet returnSignal = isArrayOfSignals || (fullKey[0] === \"$\") && (fullKey !== '$');\n\t\tif (!isArrayOfSignals && returnSignal && Array.isArray(target)) {\n\t\t\tif (fullKey === \"$\") {\n\t\t\t\tif (!arrayToArrayOfSignals.has(target))\n\t\t\t\t\tarrayToArrayOfSignals.set(target, createProxy(target, arrayHandlers));\n\t\t\t\treturn arrayToArrayOfSignals.get(target);\n\t\t\t}\n\t\t\treturnSignal = fullKey === \"$length\";\n\t\t}\n\n\t\tif (!proxyToSignals.has(receiver)) proxyToSignals.set(receiver, new Map());\n\n\t\tconst signals = proxyToSignals.get(receiver);\n\t\tconst key = returnSignal ? fullKey.replace(rg, \"\") : fullKey;\n\t\tif (\n\t\t\t!signals.has(key) &&\n\t\t\ttypeof Object.getOwnPropertyDescriptor(target, key)?.get === \"function\"\n\t\t) {\n\t\t\tsignals.set(\n\t\t\t\tkey,\n\t\t\t\tcomputed(() => Reflect.get(target, key, receiver))\n\t\t\t);\n\t\t} else {\n\t\t\tlet value = Reflect.get(target, key, receiver);\n\t\t\tif (returnSignal && typeof value === \"function\") return;\n\n\t\t\tif (typeof key === \"symbol\" && wellKnownSymbols.has(key)) return value;\n\t\t\t// TODO: doesn't \"typeof key\" always yield \"string\"?\n\n\t\t\tif (!signals.has(key)) {\n\t\t\t\tif (shouldProxy(value)) {\n\t\t\t\t\tif (!objToProxy.has(value))\n\t\t\t\t\t\tobjToProxy.set(value, createProxy(value, objectHandlers));\n\t\t\t\t\tvalue = objToProxy.get(value);\n\t\t\t\t}\n\t\t\t\tsignals.set(key, signal(value));\n\t\t\t}\n\t\t}\n\t\treturn returnSignal ? signals.get(key) : signals.get(key).value;\n\t};\n\nconst objectHandlers = {\n\tget: get(false),\n\n\tset(target: object, fullKey: string, val: any, receiver: object): boolean {\n\t\tif (!proxyToSignals.has(receiver)) proxyToSignals.set(receiver, new Map());\n\t\tconst signals = proxyToSignals.get(receiver);\n\t\tif ((fullKey[0] === \"$\") && (fullKey !== '$')) {\n\t\t\tif (!(val instanceof Signal)) throwOnMutation();\n\t\t\tconst key = fullKey.replace(rg, \"\");\n\t\t\tsignals.set(key, val);\n\t\t\treturn Reflect.set(target, key, val.peek(), receiver);\n\t\t} else {\n\t\t\tlet internal = val;\n\t\t\tif (shouldProxy(val)) {\n\t\t\t\tif (!objToProxy.has(val))\n\t\t\t\t\tobjToProxy.set(val, createProxy(val, objectHandlers));\n\t\t\t\tinternal = objToProxy.get(val);\n\t\t\t}\n\t\t\tconst result = Reflect.set(target, fullKey, val, receiver);\n\t\t\tif (!signals.has(fullKey)) signals.set(fullKey, signal(internal));\n\t\t\telse signals.get(fullKey).value = internal;\n\t\t\tif (Array.isArray(target) && signals.has(\"length\"))\n\t\t\t\tsignals.get(\"length\").value = target.length;\n\t\t\treturn result;\n\t\t}\n\t},\n\n\tdefineProperty (target:object, key:string, descriptor:object):boolean {\n\t\tif ((key[0] === \"$\") && (key !== '$')) throwOnMutation();\n\n\t\tconst isNew = ! (key in target)\n\n\t  const signals = proxyToSignals.get(objToProxy.get(target))\n\t\tconst Result:boolean = Reflect.defineProperty(target,key,descriptor)\n\t\t\tif ('value' in descriptor) {\n\t\t\t\tif (signals && signals.has(key)) signals.get(key).value = descriptor.value\n\t\t\t}\n\n\t\t\tif (isNew && objToIterable.has(target)) {\n\t\t\t\tobjToIterable.get(target).value++\n\t\t\t}\n\t\treturn Result\n\t},\n\n\tdeleteProperty(target: object, key: string): boolean {\n\t\tif ((key[0] === \"$\") && (key !== '$')) throwOnMutation();\n\t\tconst signals = proxyToSignals.get(objToProxy.get(target));\n\t\tconst result = Reflect.deleteProperty(target, key);\n\t\tif (signals && signals.has(key)) signals.get(key).value = undefined;\n\t\tobjToIterable.has(target) && objToIterable.get(target).value++;\n\t\treturn result;\n\t},\n\n\townKeys(target: object): (string | symbol)[] {\n\t\tif (!objToIterable.has(target)) objToIterable.set(target, signal(0));\n\t\t(objToIterable as any)._ = objToIterable.get(target).value;\n\t\treturn Reflect.ownKeys(target);\n\t},\n};\n\nconst arrayHandlers = {\n\tget: get(true),\n\tset: throwOnMutation,\n\tdeleteProperty: throwOnMutation,\n};\n\nconst wellKnownSymbols = new Set(\n\tObject.getOwnPropertyNames(Symbol)\n\t\t.map(key => Symbol[key as WellKnownSymbols])\n\t\t.filter(value => typeof value === \"symbol\")\n);\nconst supported = new Set([Object, Array]);\nconst shouldProxy = (val: any): boolean => {\n\tif (typeof val !== \"object\" || val === null) return false;\n\tconst isBuiltIn =\n\t\ttypeof val.constructor === \"function\" &&\n\t\tval.constructor.name in globalThis &&\n\t\t(globalThis as any)[val.constructor.name] === val.constructor;\n\treturn (!isBuiltIn || supported.has(val.constructor)) && !proxies.has(val);\n};\n\n/**** additional support for some Array methods ****/\n\n\texport function ValueIsDeeplyObserved (Value:any):boolean {\n\t  return proxies.has(Value)\n\t}\n\n/**** Array.pop ****/\n\n  const Array_pop = Array.prototype.pop\n  Array.prototype.pop = function ():any {\n    if (ValueIsDeeplyObserved(this)) {\n      let Result\n        batch(() => { Result = Array_pop.call(this) })\n      return Result\n    } else {\n      return Array_pop.call(this)\n    }\n  }\n\n/**** Array.push ****/\n\n// Array.push works out of the box\n\n/**** Array.shift ****/\n\n  const Array_shift = Array.prototype.shift\n  Array.prototype.shift = function ():any {\n    if (ValueIsDeeplyObserved(this)) {\n      let Result\n        batch(() => { Result = Array_shift.call(this) })\n      return Result\n    } else {\n      return Array_shift.call(this)\n    }\n  }\n\n/**** Array.unshift ****/\n\n  const Array_unshift = Array.prototype.unshift\n  Array.prototype.unshift = function (...Arguments:any[]):number {\n    if (ValueIsDeeplyObserved(this)) {\n      let Result\n        batch(() => { Result = Array_unshift.call(this,...Arguments) })\n// @ts-ignore TS2352 no conversion necessary\n      return Result\n    } else {\n      return Array_unshift.call(this,...Arguments)\n    }\n  }\n\n/**** Array.splice ****/\n\n  const Array_splice = Array.prototype.splice\n  Array.prototype.splice = function (...Arguments:any[]):any[] {\n    if (ValueIsDeeplyObserved(this)) {\n      let Result\n// @ts-ignore TS2345 te given kind of argument passing is ok\n        batch(() => { Result = Array_splice.call(this,...Arguments) })\n// @ts-ignore TS2352 no conversion necessary\n      return Result\n    } else {\n// @ts-ignore TS2345 te given kind of argument passing is ok\n      return Array_splice.call(this,...Arguments)\n    }\n  }\n\n/** TYPES **/\n\nexport type DeepSignal<T> = T extends Function\n\t? T\n\t: T extends Array<unknown>\n\t? DeepSignalArray<T>\n\t: T extends object\n\t? DeepSignalObject<T>\n\t: T;\n\ntype DeepSignalObject<T extends object> = {\n\t[P in keyof T & string as `$${P}`]?: T[P] extends Function\n\t\t? never\n\t\t: Signal<T[P]>;\n} & {\n\t[P in keyof T]: DeepSignal<T[P]>;\n};\n\n/** @ts-expect-error **/\ninterface DeepArray<T> extends Array<T> {\n\tmap: <U>(\n\t\tcallbackfn: (\n\t\t\tvalue: DeepSignal<T>,\n\t\t\tindex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => U,\n\t\tthisArg?: any\n\t) => U[];\n\tforEach: (\n\t\tcallbackfn: (\n\t\t\tvalue: DeepSignal<T>,\n\t\t\tindex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => void,\n\t\tthisArg?: any\n\t) => void;\n\tconcat(...items: ConcatArray<T>[]): DeepSignalArray<T[]>;\n\tconcat(...items: (T | ConcatArray<T>)[]): DeepSignalArray<T[]>;\n\treverse(): DeepSignalArray<T[]>;\n\tshift(): DeepSignal<T> | undefined;\n\tslice(start?: number, end?: number): DeepSignalArray<T[]>;\n\tsplice(start: number, deleteCount?: number): DeepSignalArray<T[]>;\n\tsplice(\n\t\tstart: number,\n\t\tdeleteCount: number,\n\t\t...items: T[]\n\t): DeepSignalArray<T[]>;\n\tfilter<S extends T>(\n\t\tpredicate: (\n\t\t\tvalue: DeepSignal<T>,\n\t\t\tindex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => value is DeepSignal<S>,\n\t\tthisArg?: any\n\t): DeepSignalArray<S[]>;\n\tfilter(\n\t\tpredicate: (\n\t\t\tvalue: DeepSignal<T>,\n\t\t\tindex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => unknown,\n\t\tthisArg?: any\n\t): DeepSignalArray<T[]>;\n\treduce(\n\t\tcallbackfn: (\n\t\t\tpreviousValue: DeepSignal<T>,\n\t\t\tcurrentValue: DeepSignal<T>,\n\t\t\tcurrentIndex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => T\n\t): DeepSignal<T>;\n\treduce(\n\t\tcallbackfn: (\n\t\t\tpreviousValue: DeepSignal<T>,\n\t\t\tcurrentValue: DeepSignal<T>,\n\t\t\tcurrentIndex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => DeepSignal<T>,\n\t\tinitialValue: T\n\t): DeepSignal<T>;\n\treduce<U>(\n\t\tcallbackfn: (\n\t\t\tpreviousValue: U,\n\t\t\tcurrentValue: DeepSignal<T>,\n\t\t\tcurrentIndex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => U,\n\t\tinitialValue: U\n\t): U;\n\treduceRight(\n\t\tcallbackfn: (\n\t\t\tpreviousValue: DeepSignal<T>,\n\t\t\tcurrentValue: DeepSignal<T>,\n\t\t\tcurrentIndex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => T\n\t): DeepSignal<T>;\n\treduceRight(\n\t\tcallbackfn: (\n\t\t\tpreviousValue: DeepSignal<T>,\n\t\t\tcurrentValue: DeepSignal<T>,\n\t\t\tcurrentIndex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => DeepSignal<T>,\n\t\tinitialValue: T\n\t): DeepSignal<T>;\n\treduceRight<U>(\n\t\tcallbackfn: (\n\t\t\tpreviousValue: U,\n\t\t\tcurrentValue: DeepSignal<T>,\n\t\t\tcurrentIndex: number,\n\t\t\tarray: DeepSignalArray<T[]>\n\t\t) => U,\n\t\tinitialValue: U\n\t): U;\n}\ntype ArrayType<T> = T extends Array<infer I> ? I : T;\ntype DeepSignalArray<T> = DeepArray<ArrayType<T>> & {\n\t[key: number]: DeepSignal<ArrayType<T>>;\n\t$?: { [key: number]: Signal<ArrayType<T>> };\n\t$length?: Signal<number>;\n};\n\nexport declare const useDeepSignal: <T extends object>(obj: T) => DeepSignal<T>;\n\ntype FilterSignals<K> = K extends `$${infer P}` ? never : K;\ntype RevertDeepSignalObject<T> = Pick<T, FilterSignals<keyof T>>;\ntype RevertDeepSignalArray<T> = Omit<T, \"$\" | \"$length\">;\n\nexport type RevertDeepSignal<T> = T extends Array<unknown>\n\t? RevertDeepSignalArray<T>\n\t: T extends object\n\t? RevertDeepSignalObject<T>\n\t: T;\n\ntype WellKnownSymbols =\n\t| \"asyncIterator\"\n\t| \"hasInstance\"\n\t| \"isConcatSpreadable\"\n\t| \"iterator\"\n\t| \"match\"\n\t| \"matchAll\"\n\t| \"replace\"\n\t| \"search\"\n\t| \"species\"\n\t| \"split\"\n\t| \"toPrimitive\"\n\t| \"toStringTag\"\n\t| \"unscopables\";\n","import \"@preact/signals\";\nimport { useMemo } from \"preact/hooks\";\nimport { deepSignal, type DeepSignal } from \"../core/src\";\n\nexport const useDeepSignal = <T extends object>(obj: T): DeepSignal<T> => {\n\treturn useMemo(() => deepSignal(obj), []);\n};\n\nexport * from \"../core/src\";\n"],"names":["proxyToSignals","WeakMap","objToProxy","arrayToArrayOfSignals","proxies","WeakSet","objToIterable","rg","peeking","deepSignal","obj","shouldProxy","Error","has","set","createProxy","objectHandlers","get","target","handlers","proxy","Proxy","add","throwOnMutation","isArrayOfSignals","fullKey","receiver","_Object$getOwnPropert","Reflect","returnSignal","Array","isArray","arrayHandlers","Map","signals","key","replace","Object","getOwnPropertyDescriptor","value","wellKnownSymbols","signal","computed","val","Signal","peek","internal","result","length","defineProperty","descriptor","isNew","Result","deleteProperty","undefined","ownKeys","_","Set","getOwnPropertyNames","Symbol","map","filter","supported","constructor","name","globalThis","ValueIsDeeplyObserved","Value","Array_pop","prototype","pop","_this","this","batch","call","Array_shift","shift","_this2","Array_unshift","unshift","_this3","Arguments","slice","arguments","apply","concat","Array_splice","splice","_this4","e","useMemo"],"mappings":"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"}