import"@preact/signals";import{useMemo as e}from"preact/hooks";import{Signal as t,signal as r,computed as s}from"@preact/signals-core";const n=new WeakMap,o=new WeakMap,a=new WeakMap,l=new WeakSet,c=new WeakMap,g=/^\$/;let i=!1;const p=e=>{if(!d(e))throw new Error("This object can't be observed.");return o.has(e)||o.set(e,h(e,w)),o.get(e)},f=(e,t)=>(i=!0,i=!1,e[t]),h=(e,t)=>{const r=new Proxy(e,t);return l.add(r),r},u=()=>{throw new Error("Don't mutate the signals directly.")},y=e=>(t,l,c)=>{var p;if(i)return Reflect.get(t,l,c);let f=e||"$"===l[0];if(!e&&f&&Array.isArray(t)){if("$"===l)return a.has(t)||a.set(t,h(t,m)),a.get(t);f="$length"===l}n.has(c)||n.set(c,new Map);const u=n.get(c),y=f?l.replace(g,""):l;if(u.has(y)||"function"!=typeof(null==(p=Object.getOwnPropertyDescriptor(t,y))?void 0:p.get)){let e=Reflect.get(t,y,c);if(f&&"function"==typeof e)return;if("symbol"==typeof y&&b.has(y))return e;u.has(y)||(d(e)&&(o.has(e)||o.set(e,h(e,w)),e=o.get(e)),u.set(y,r(e)))}else u.set(y,s(()=>Reflect.get(t,y,c)));return f?u.get(y):u.get(y).value},w={get:y(!1),set(e,s,a,l){n.has(l)||n.set(l,new Map);const i=n.get(l);if("$"===s[0]){a instanceof t||u();const r=s.replace(g,"");return i.set(r,a),Reflect.set(e,r,a.peek(),l)}{let t=a;d(a)&&(o.has(a)||o.set(a,h(a,w)),t=o.get(a));const n=!(s in e),g=Reflect.set(e,s,a,l);return i.has(s)?i.get(s).value=t:i.set(s,r(t)),n&&c.has(e)&&c.get(e).value++,Array.isArray(e)&&i.has("length")&&(i.get("length").value=e.length),g}},deleteProperty(e,t){"$"===t[0]&&u();const r=n.get(o.get(e)),s=Reflect.deleteProperty(e,t);return r&&r.has(t)&&(r.get(t).value=void 0),c.has(e)&&c.get(e).value++,s},ownKeys:e=>(c.has(e)||c.set(e,r(0)),c.get(e),Reflect.ownKeys(e))},m={get:y(!0),set:u,deleteProperty:u},b=new Set(Object.getOwnPropertyNames(Symbol).map(e=>Symbol[e]).filter(e=>"symbol"==typeof e)),v=new Set([Object,Array]),d=e=>"object"==typeof e&&null!==e&&(!("function"==typeof e.constructor&&e.constructor.name in globalThis&&globalThis[e.constructor.name]===e.constructor)||v.has(e.constructor))&&!l.has(e),k=t=>e(()=>p(t),[]);export{p as deepSignal,f as peek,k as useDeepSignal};
//# sourceMappingURL=deepsignal.mjs.map
