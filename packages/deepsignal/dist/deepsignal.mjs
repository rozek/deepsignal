import"@preact/signals";import{useMemo as e}from"preact/hooks";import{batch as t,Signal as r,signal as n,computed as s}from"@preact/signals-core";const o=new WeakMap,a=new WeakMap,l=new WeakMap,c=new WeakSet,i=new WeakMap,p=/^\$/;let u=!1;const f=e=>{if(!$(e))throw new Error("This object can't be observed.");return a.has(e)||a.set(e,g(e,v)),a.get(e)},h=(e,t)=>{u=!0;const r=e[t];try{u=!1}catch(e){}return r},g=(e,t)=>{const r=new Proxy(e,t);return c.add(r),r},y=()=>{throw new Error("Don't mutate the signals directly.")},w=e=>(t,r,c)=>{var i;if(u)return Reflect.get(t,r,c);let f=e||"$"===r[0]&&"$"!==r;if(!e&&f&&Array.isArray(t)){if("$"===r)return l.has(t)||l.set(t,g(t,m)),l.get(t);f="$length"===r}o.has(c)||o.set(c,new Map);const h=o.get(c),y=f?r.replace(p,""):r;if(h.has(y)||"function"!=typeof(null==(i=Object.getOwnPropertyDescriptor(t,y))?void 0:i.get)){let e=Reflect.get(t,y,c);if(f&&"function"==typeof e)return;if("symbol"==typeof y&&b.has(y))return e;h.has(y)||($(e)&&(a.has(e)||a.set(e,g(e,v)),e=a.get(e)),h.set(y,n(e)))}else h.set(y,s(()=>Reflect.get(t,y,c)));return f?h.get(y):h.get(y).value},v={get:w(!1),set(e,t,s,l){o.has(l)||o.set(l,new Map);const c=o.get(l);if("$"===t[0]&&"$"!==t){s instanceof r||y();const n=t.replace(p,"");return c.set(n,s),Reflect.set(e,n,s.peek(),l)}{let r=s;$(s)&&(a.has(s)||a.set(s,g(s,v)),r=a.get(s));const o=Reflect.set(e,t,s,l);return c.has(t)?c.get(t).value=r:c.set(t,n(r)),Array.isArray(e)&&c.has("length")&&(c.get("length").value=e.length),o}},defineProperty(e,t,r){"$"===t[0]&&"$"!==t&&y();const n=!(t in e),s=o.get(a.get(e)),l=Reflect.defineProperty(e,t,r);return"value"in r&&s&&s.has(t)&&(s.get(t).value=r.value),n&&i.has(e)&&i.get(e).value++,l},deleteProperty(e,t){"$"===t[0]&&"$"!==t&&y();const r=o.get(a.get(e)),n=Reflect.deleteProperty(e,t);return r&&r.has(t)&&(r.get(t).value=void 0),i.has(e)&&i.get(e).value++,n},ownKeys:e=>(i.has(e)||i.set(e,n(0)),i._=i.get(e).value,Reflect.ownKeys(e))},m={get:w(!0),set:y,deleteProperty:y},b=new Set(Object.getOwnPropertyNames(Symbol).map(e=>Symbol[e]).filter(e=>"symbol"==typeof e)),d=new Set([Object,Array]),$=e=>"object"==typeof e&&null!==e&&(!("function"==typeof e.constructor&&e.constructor.name in globalThis&&globalThis[e.constructor.name]===e.constructor)||d.has(e.constructor))&&!c.has(e);function P(e){return c.has(e)}["copyWithin","fill","pop","reverse","shift","sort","splice","unshift"].forEach(e=>{var r;Array.prototype[e]=(r=Array.prototype[e],function(...e){if(P(this)){let n;return t(()=>{n=r.call(this,...e)}),n}return r.call(this,...e)})});const R=t=>e(()=>f(t),[]);export{P as ValueIsDeeplyObserved,f as deepSignal,h as peek,R as useDeepSignal};
//# sourceMappingURL=deepsignal.mjs.map
